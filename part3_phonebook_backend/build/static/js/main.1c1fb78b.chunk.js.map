{"version":3,"sources":["components/Search.js","components/AddContactForm.js","components/DisplayContacts.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Search","value","onChange","AddContactForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","DisplayContacts","contacts","searchName","removeContact","filter","contact","searchNameEscaped","replace","RegExp","test","name","map","number","onClick","event","id","baseUrl","services","getAll","axios","get","then","response","data","create","newObject","post","remove","delete","update","updatedObject","put","Notification","notification","mainStyle","color","border","padding","errorStyle","borderColor","successStyle","message","style","App","useState","setContacts","newName","setNewName","newNumber","setNewNumber","setSearchName","setNotification","useEffect","contactService","initialContacts","updateContact","existingContact","window","confirm","updatedContact","returnedContact","setTimeout","target","preventDefault","find","newContact","catch","error","console","log","contactToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c1fb78b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Search = ({ value, onChange }) => {\n  return (\n    <div>\n      Search:{\" \"}\n      <input value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst AddContactForm = ({\n  onSubmit,\n  nameValue,\n  nameOnChange,\n  numberValue,\n  numberOnChange,\n}) => {\n  return (\n    <>\n      <h2>Add a contact</h2>\n      <form onSubmit={onSubmit}>\n        <div>\n          Name:{\"\"}\n          <input value={nameValue} onChange={nameOnChange} />\n        </div>\n        <div>\n          Number:{\"\"}\n          <input value={numberValue} onChange={numberOnChange} />\n        </div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default AddContactForm;\n","import React from \"react\";\n\nconst DisplayContacts = ({ contacts, searchName, removeContact }) => {\n  return (\n    <>\n      <h2>Numbers</h2>\n      {contacts\n        .filter((contact) => {\n          const searchNameEscaped = searchName.replace(\n            /[-/\\\\^$*+?.()|[\\]{}]/g,\n            \"\\\\$&\"\n          );\n          const searchRegex = new RegExp(`${searchNameEscaped}`, \"i\");\n          return searchRegex.test(contact.name);\n        })\n        .map((contact) => (\n          <p key={contact.id}>\n            {contact.name} {contact.number}{\" \"}\n            <button onClick={(event) => removeContact(event, contact)}>\n              Delete\n            </button>\n          </p>\n        ))}\n    </>\n  );\n};\n\nexport default DisplayContacts;\n","import axios from \"axios\";\nconst baseUrl = \"/api/contacts\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request;\n}\n\nconst update = (updatedObject) => {\n  const request = axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject)\n  return request.then((response) => response.data);\n}\n\nconst services = { getAll, create, remove, update };\n\nexport default services;\n","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  const mainStyle = {\n    color: \"blue\",\n    border: \"1px solid blue\",\n    padding: \".3em\"\n  }\n  \n  const errorStyle = {\n    ...mainStyle,\n    color: \"red\",\n    borderColor: \"red\"\n  }\n  \n  const successStyle = {\n    ...mainStyle,\n    color: \"green\",\n    borderColor: \"green\"\n  }\n  \n  if (notification.message === null) return null;\n\n  return (\n    <p style={notification.type === \"error\" ? errorStyle : notification.type === \"success\" ? successStyle : mainStyle}>\n      {notification.message}\n    </p>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from \"react\";\nimport Search from \"./components/Search\";\nimport AddContactForm from \"./components/AddContactForm\";\nimport DisplayContacts from \"./components/DisplayContacts\";\nimport contactService from \"./services/contacts\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [notification, setNotification] = useState({ message: null, type: null });\n  \n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setContacts(initialContacts)\n      })\n  }, [])\n\n  const addContact = (event) => {\n    event.preventDefault();\n    const existingContact =\n      contacts.find((contact) => contact.name === newName);\n    if (existingContact) {\n      updateContact(existingContact);\n    } else {\n      const newContact = {\n        name: newName,\n        number: newNumber,\n      };\n      contactService\n        .create(newContact)\n        .then(returnedContact => {\n          setContacts([...contacts, returnedContact]);\n          setNotification({ \n            message: `Added '${returnedContact.name}'`, \n            type: \"success\" \n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null })\n          }, 4000);\n        })\n        .catch(error => {\n          console.log(error)\n          setNotification({ \n            message: `${error}. Could not add '${newContact.name}' to phonebook.`, \n            type: \"error\" \n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null })\n          }, 4000);\n        })\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const removeContact = (event, contactToRemove) => {\n    event.preventDefault();\n    if (window.confirm(`Delete ${contactToRemove.name}?`)) {\n      contactService\n        .remove(contactToRemove.id)\n        .then(response => {\n          setContacts(\n            contacts.filter(contact => contact.id !== contactToRemove.id)\n          )\n          setNotification({ \n            message: `Removed '${contactToRemove.name}'`, \n            type: \"success\" \n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null })\n          }, 4000);\n        })\n        .catch(error => {\n          setContacts(\n            contacts.filter(contact => contact.id !== contactToRemove.id)\n          )\n          setNotification({ \n            message: `Contact info for '${contactToRemove.name}' has already been removed from the server`, \n            type: \"error\" \n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null })\n          }, 4000);\n        })\n    }\n  }\n\n  const updateContact = (existingContact) => {\n    const confirmed = window.confirm(\n      `${existingContact.name} is already in the Phonebook, would you like to update the number to ${newNumber}?`\n    );\n    if (confirmed) {\n      const updatedContact = {...existingContact, number: newNumber}\n      contactService\n        .update(updatedContact)\n        .then(returnedContact => {\n          setContacts(\n            contacts.map(contact => \n              contact.id !== returnedContact.id \n              ? contact \n              : returnedContact\n            )\n          )\n          setNotification({ \n            message: `Updated number for '${returnedContact.name}' to '${returnedContact.number}'`, \n            type: \"success\" \n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null })\n          }, 4000);\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Search\n        value={searchName}\n        onChange={(event) => setSearchName(event.target.value)}\n      />\n      <AddContactForm\n        onSubmit={addContact}\n        nameValue={newName}\n        nameOnChange={(event) => setNewName(event.target.value)}\n        numberValue={newNumber}\n        numberOnChange={(event) => setNewNumber(event.target.value)}\n      />\n      <DisplayContacts \n        contacts={contacts} \n        searchName={searchName} \n        removeContact={removeContact} \n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}