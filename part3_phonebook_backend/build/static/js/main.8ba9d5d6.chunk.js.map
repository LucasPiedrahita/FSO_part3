{"version":3,"sources":["components/Search.js","components/AddContactForm.js","components/DisplayContacts.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Search","value","onChange","AddContactForm","onSubmit","nameValue","nameOnChange","numberValue","numberOnChange","type","DisplayContacts","contacts","searchName","removeContact","filter","contact","searchNameEscaped","replace","RegExp","test","name","map","number","onClick","event","id","baseUrl","services","getAll","axios","get","then","response","data","create","newObject","post","remove","delete","update","updatedObject","put","Notification","notification","mainStyle","color","border","padding","errorStyle","borderColor","successStyle","message","style","App","useState","setContacts","newName","setNewName","newNumber","setNewNumber","setSearchName","setNotification","useEffect","contactService","initialContacts","target","preventDefault","existingContact","find","localeCompare","undefined","sensitivity","window","confirm","updatedContact","returnedContact","setTimeout","catch","error","console","log","JSON","stringify","updateContact","newContact","contactToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ba9d5d6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Search = ({ value, onChange }) => (\n  <div>\n    Search: <input value={value} onChange={onChange} />\n  </div>\n);\n\nexport default Search;\n","import React from 'react';\n\nconst AddContactForm = ({ onSubmit, nameValue, nameOnChange, numberValue, numberOnChange }) => (\n  <>\n    <h2>Add a contact</h2>\n    <form onSubmit={onSubmit}>\n      <div>\n        Name:{''}\n        <input value={nameValue} onChange={nameOnChange} />\n      </div>\n      <div>\n        Number:{''}\n        <input value={numberValue} onChange={numberOnChange} />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  </>\n);\n\nexport default AddContactForm;\n","import React from 'react';\n\nconst DisplayContacts = ({ contacts, searchName, removeContact }) => (\n  <>\n    <h2>Numbers</h2>\n    {contacts\n      .filter((contact) => {\n        const searchNameEscaped = searchName.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n        const searchRegex = new RegExp(`${searchNameEscaped}`, 'i');\n        return searchRegex.test(contact.name);\n      })\n      .map((contact) => (\n        <p key={contact.id}>\n          {contact.name} {contact.number}{' '}\n          <button type=\"button\" onClick={(event) => removeContact(event, contact)}>\n            Delete\n          </button>\n        </p>\n      ))}\n  </>\n);\n\nexport default DisplayContacts;\n","import axios from 'axios';\n\nconst baseUrl = '/api/contacts';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request;\n};\n\nconst update = (updatedObject) => {\n  const request = axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject);\n  return request.then((response) => response.data);\n};\n\nconst services = { getAll, create, remove, update };\n\nexport default services;\n","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  const mainStyle = {\n    color: 'blue',\n    border: '1px solid blue',\n    padding: '.3em',\n  };\n\n  const errorStyle = {\n    ...mainStyle,\n    color: 'red',\n    borderColor: 'red',\n  };\n\n  const successStyle = {\n    ...mainStyle,\n    color: 'green',\n    borderColor: 'green',\n  };\n\n  if (notification.message === null) return null;\n\n  return (\n    <p\n      style={\n        // eslint-disable-next-line no-nested-ternary\n        notification.type === 'error'\n          ? errorStyle\n          : notification.type === 'success'\n          ? successStyle\n          : mainStyle\n      }\n    >\n      {notification.message}\n    </p>\n  );\n};\n\nexport default Notification;\n","/* eslint-disable no-alert */\nimport React, { useState, useEffect } from 'react';\nimport Search from './components/Search';\nimport AddContactForm from './components/AddContactForm';\nimport DisplayContacts from './components/DisplayContacts';\nimport contactService from './services/contacts';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchName, setSearchName] = useState('');\n  const [notification, setNotification] = useState({\n    message: null,\n    type: null,\n  });\n\n  useEffect(() => {\n    contactService.getAll().then((initialContacts) => {\n      setContacts(initialContacts);\n    });\n  }, []);\n\n  const updateContact = (existingContact) => {\n    const confirmed = window.confirm(\n      `${existingContact.name} is already in the Phonebook, would you like to update the number to ${newNumber}?`\n    );\n    if (confirmed) {\n      const updatedContact = { ...existingContact, number: newNumber };\n      contactService\n        .update(updatedContact)\n        .then((returnedContact) => {\n          setContacts(\n            contacts.map((contact) =>\n              contact.id !== returnedContact.id ? contact : returnedContact\n            )\n          );\n          setNotification({\n            message: `Updated number for '${returnedContact.name}' to '${returnedContact.number}'`,\n            type: 'success',\n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null });\n          }, 4000);\n        })\n        .catch((error) => {\n          console.log(error.response.data);\n          setNotification({\n            message: `${JSON.stringify(error.response.data)}`,\n            type: 'error',\n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null });\n          }, 4000);\n        });\n    }\n  };\n\n  const addContact = (event) => {\n    event.preventDefault();\n    const existingContact = contacts.find(\n      (contact) =>\n        contact.name.localeCompare(newName, undefined, {\n          sensitivity: 'accent',\n        }) === 0\n    );\n    if (existingContact) {\n      updateContact(existingContact);\n    } else {\n      const newContact = {\n        name: newName,\n        number: newNumber,\n      };\n      contactService\n        .create(newContact)\n        .then((returnedContact) => {\n          setContacts([...contacts, returnedContact]);\n          setNotification({\n            message: `Added '${returnedContact.name}'`,\n            type: 'success',\n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null });\n          }, 4000);\n        })\n        .catch((error) => {\n          console.log(error.response.data);\n          setNotification({\n            message: `${JSON.stringify(error.response.data)}`,\n            type: 'error',\n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null });\n          }, 4000);\n        });\n    }\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const removeContact = (event, contactToRemove) => {\n    event.preventDefault();\n    if (window.confirm(`Delete ${contactToRemove.name}?`)) {\n      contactService\n        .remove(contactToRemove.id)\n        .then(() => {\n          setContacts(contacts.filter((contact) => contact.id !== contactToRemove.id));\n          setNotification({\n            message: `Removed '${contactToRemove.name}'`,\n            type: 'success',\n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null });\n          }, 4000);\n        })\n        .catch((error) => {\n          console.log(error.response.data);\n          setNotification({\n            message: `${JSON.stringify(error.response.data)}`,\n            type: 'error',\n          });\n          setTimeout(() => {\n            setNotification({ message: null, type: null });\n          }, 4000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Search value={searchName} onChange={(event) => setSearchName(event.target.value)} />\n      <AddContactForm\n        onSubmit={addContact}\n        nameValue={newName}\n        nameOnChange={(event) => setNewName(event.target.value)}\n        numberValue={newNumber}\n        numberOnChange={(event) => setNewNumber(event.target.value)}\n      />\n      <DisplayContacts contacts={contacts} searchName={searchName} removeContact={removeContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}